{"ast":null,"code":"var _jsxFileName = \"/home/meunier/Documents/myportfolio/client/src/pages/Contact.jsx\";\nimport React, { Component } from \"react\";\nimport PartTitle from \"../components/PartTitle\";\nimport Error from \"./Error\";\nconst SERVER_ADDRESS = process.env.REACT_APP_SERVER_ADDRESS;\n\nclass Contact extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateData = event => {\n      const name = event.target.name;\n      const value = event.target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.errorMessage = message => {\n      this.setState({\n        seeError: true\n      });\n      this.setState({\n        errorMessage: message\n      });\n    };\n\n    this.submitForm = event => {\n      event.preventDefault();\n      const {\n        fullname,\n        email,\n        phonenumber,\n        message,\n        fullnameError,\n        emailError,\n        messageError\n      } = this.state;\n\n      if (fullname === \"\") {\n        this.setState({\n          fullnameError: true\n        });\n      } else {\n        this.setState({\n          fullnameError: false\n        });\n      }\n\n      if (email === \"\") {\n        this.setState({\n          emailError: true\n        });\n      } else {\n        this.setState({\n          emailError: false\n        });\n      }\n\n      if (message === \"\") {\n        this.setState({\n          messageError: true\n        });\n      } else {\n        this.setState({\n          messageError: false\n        });\n      }\n\n      if (fullname !== \"\" && email !== \"\" && message !== \"\") {\n        fetch(SERVER_ADDRESS + \"/sendmail\", {\n          method: \"POST\",\n          headers: new Headers({\n            \"Content-Type\": \"application/json\"\n          }),\n          body: JSON.stringify({\n            fullname,\n            email,\n            phonenumber,\n            message\n          })\n        }).then(res => {\n          console.log(res);\n\n          if (res.ok) {// this.setState({ isSent: true }, () => {\n            //   setTimeout(() => {\n            //     this.setState({ isSent: false });\n            //   }, 5000);\n            // });\n          }\n        });\n      } else {\n        this.errorMessage(\"il y a une erreur\");\n      }\n    };\n\n    this.state = {\n      fullname: \"\",\n      phonenumber: \"\",\n      email: \"\",\n      message: \"\",\n      fullnameError: false,\n      emailError: false,\n      messageError: false,\n      seeError: false,\n      errorMessage: \"\"\n    };\n  }\n\n  render() {\n    const {\n      fullname,\n      message,\n      email,\n      fullnameError,\n      emailError,\n      messageError\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PartTitle, {\n      title: \"Contact\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"contact-container\",\n      onSubmit: this.submitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"contact-container__top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"contact-container__items\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"contact-container__title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, \"Nom *\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.updateData,\n      className: fullnameError ? \"contact-container__input contact-container__input--red\" : \"contact-container__input\",\n      name: \"fullname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"contact-container__items\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"contact-container__title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, \"Num\\xE9ro de t\\xE9l\\xE9phone\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.updateData,\n      className: \"contact-container__input\",\n      name: \"phonenumber\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"contact-container__items\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"contact-container__title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }, \"Email *\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.updateData,\n      className: emailError ? \"contact-container__input contact-container__input--red\" : \"contact-container__input\",\n      name: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"contact-container__bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"contact-container__title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, \"Message *\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      spellCheck: \"false\",\n      onChange: this.updateData,\n      className: messageError ? \"contact-container__textarea contact-container__textarea--red\" : \"contact-container__textarea\",\n      name: \"message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: fullname === \"\" || message === \"\" || email === \"\" ? \"contact-container__button contact-container__button--disable\" : \"contact-container__button \",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 15\n      }\n    }, \"Envoyer\")))), this.state.seeError && /*#__PURE__*/React.createElement(Error, {\n      message: this.state.errorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 33\n      }\n    }));\n  }\n\n}\n\nexport default Contact;","map":{"version":3,"sources":["/home/meunier/Documents/myportfolio/client/src/pages/Contact.jsx"],"names":["React","Component","PartTitle","Error","SERVER_ADDRESS","process","env","REACT_APP_SERVER_ADDRESS","Contact","constructor","props","updateData","event","name","target","value","setState","errorMessage","message","seeError","submitForm","preventDefault","fullname","email","phonenumber","fullnameError","emailError","messageError","state","fetch","method","headers","Headers","body","JSON","stringify","then","res","console","log","ok","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PartTitle from \"../components/PartTitle\";\nimport Error from \"./Error\";\n\nconst SERVER_ADDRESS = process.env.REACT_APP_SERVER_ADDRESS;\n\nclass Contact extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fullname: \"\",\n      phonenumber: \"\",\n      email: \"\",\n      message: \"\",\n      fullnameError: false,\n      emailError: false,\n      messageError: false,\n      seeError: false,\n      errorMessage: \"\",\n    };\n  }\n\n  updateData = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n    this.setState({ [name]: value });\n  };\n\n  errorMessage = (message) => {\n    this.setState({ seeError: true });\n    this.setState({ errorMessage: message });\n  };\n\n  submitForm = (event) => {\n    event.preventDefault();\n    const {\n      fullname,\n      email,\n      phonenumber,\n      message,\n      fullnameError,\n      emailError,\n      messageError,\n    } = this.state;\n\n    if (fullname === \"\") {\n      this.setState({ fullnameError: true });\n    } else {\n      this.setState({ fullnameError: false });\n    }\n\n    if (email === \"\") {\n      this.setState({ emailError: true });\n    } else {\n      this.setState({ emailError: false });\n    }\n\n    if (message === \"\") {\n      this.setState({ messageError: true });\n    } else {\n      this.setState({ messageError: false });\n    }\n\n    if (fullname !== \"\" && email !== \"\" && message !== \"\") {\n      fetch(SERVER_ADDRESS + \"/sendmail\", {\n        method: \"POST\",\n        headers: new Headers({\n          \"Content-Type\": \"application/json\",\n        }),\n        body: JSON.stringify({\n          fullname,\n          email,\n          phonenumber,\n          message,\n        }),\n      }).then((res) => {\n        console.log(res);\n        if (res.ok) {\n          // this.setState({ isSent: true }, () => {\n          //   setTimeout(() => {\n          //     this.setState({ isSent: false });\n          //   }, 5000);\n          // });\n        }\n      });\n    } else {\n      this.errorMessage(\"il y a une erreur\");\n    }\n  };\n\n  render() {\n    const {\n      fullname,\n      message,\n      email,\n      fullnameError,\n      emailError,\n      messageError,\n    } = this.state;\n    return (\n      <>\n        <PartTitle title=\"Contact\" />\n\n        <form className=\"contact-container\" onSubmit={this.submitForm}>\n          <div className=\"contact-container__top\">\n            <div className=\"contact-container__items\">\n              <p className=\"contact-container__title\">Nom *</p>\n              <input\n                onChange={this.updateData}\n                className={\n                  fullnameError\n                    ? \"contact-container__input contact-container__input--red\"\n                    : \"contact-container__input\"\n                }\n                name=\"fullname\"\n              />\n            </div>\n            <div className=\"contact-container__items\">\n              <p className=\"contact-container__title\">Numéro de téléphone</p>\n              <input\n                onChange={this.updateData}\n                className=\"contact-container__input\"\n                name=\"phonenumber\"\n              />\n            </div>\n            <div className=\"contact-container__items\">\n              <p className=\"contact-container__title\">Email *</p>\n              <input\n                onChange={this.updateData}\n                className={\n                  emailError\n                    ? \"contact-container__input contact-container__input--red\"\n                    : \"contact-container__input\"\n                }\n                name=\"email\"\n              />\n            </div>\n          </div>\n          <div className=\"contact-container__bottom\">\n            <p className=\"contact-container__title\">Message *</p>\n            <textarea\n              spellCheck=\"false\"\n              onChange={this.updateData}\n              className={\n                messageError\n                  ? \"contact-container__textarea contact-container__textarea--red\"\n                  : \"contact-container__textarea\"\n              }\n              name=\"message\"\n            ></textarea>\n            <div>\n              <button\n                className={\n                  fullname === \"\" || message === \"\" || email === \"\"\n                    ? \"contact-container__button contact-container__button--disable\"\n                    : \"contact-container__button \"\n                }\n                type=\"submit\"\n              >\n                Envoyer\n              </button>\n            </div>\n          </div>\n        </form>\n\n        {this.state.seeError && <Error message={this.state.errorMessage} />}\n      </>\n    );\n  }\n}\n\nexport default Contact;\n"]},"metadata":{},"sourceType":"module"}